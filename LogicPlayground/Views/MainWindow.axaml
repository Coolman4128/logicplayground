<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:LogicPlayground.ViewModels"
        xmlns:views="using:LogicPlayground.Views"
        xmlns:converters="using:LogicPlayground.Converters"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="1000" d:DesignHeight="600"
        x:Class="LogicPlayground.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        Title="LogicPlayground">

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel/>
    </Design.DataContext>

    <Window.Resources>
        <views:ViewModelToViewConverter x:Key="ViewModelToViewConverter" />
        <converters:BoolToBackgroundConverter x:Key="BoolToBackgroundConverter" />
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{Binding SidebarWidth}" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        
        <!-- Sidebar -->
        <Border Grid.Column="0" Background="#2D2D30" BorderBrush="#3F3F46" BorderThickness="0,0,1,0">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                
                <!-- Header -->
                <Border Grid.Row="0" Background="#007ACC" Padding="15,10">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        
                        <TextBlock Grid.Column="0"
                                   Text="Logic Playground" 
                                   Foreground="White" 
                                   FontWeight="Bold" 
                                   FontSize="16" 
                                   TextAlignment="Center"
                                   IsVisible="{Binding !IsSidebarCollapsed}" />
                                   
                        <Button Grid.Column="1"
                                Content="â˜°"
                                Background="Transparent"
                                BorderThickness="0"
                                Foreground="White"
                                FontSize="14"
                                Width="30"
                                Height="30"
                                HorizontalAlignment="Right"
                                Command="{Binding ToggleSidebarCommand}" />
                    </Grid>
                </Border>
                
                <!-- Navigation Items -->
                <ListBox Grid.Row="1" 
                         ItemsSource="{Binding NavigationItems}"
                         SelectedItem="{Binding SelectedNavigationItem}"
                         Background="Transparent"
                         BorderThickness="0"
                         Padding="0"
                         Margin="5,10">
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="vm:NavigationItemViewModel">
                            <Border Background="{Binding IsSelected, Converter={StaticResource BoolToBackgroundConverter}}"
                                    CornerRadius="5"
                                    Margin="2"
                                    Padding="{Binding $parent[Window].DataContext.IsSidebarCollapsed, Converter={x:Static converters:BoolToThicknessConverter.Instance}, ConverterParameter='8,8,8,8|10,8,10,8'}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Icon}" 
                                               FontSize="16" 
                                               Margin="0,0,10,0"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="{Binding $parent[Window].DataContext.IsSidebarCollapsed, Converter={x:Static converters:BoolToAlignmentConverter.Instance}}" />
                                    <TextBlock Text="{Binding Title}" 
                                               Foreground="White" 
                                               FontSize="14"
                                               VerticalAlignment="Center"
                                               IsVisible="{Binding $parent[Window].DataContext.IsSidebarCollapsed, Converter={x:Static converters:BoolToVisibilityConverter.Instance}}" />
                                </StackPanel>
                            </Border>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.Styles>
                        <Style Selector="ListBoxItem">
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="Margin" Value="0" />
                            <Setter Property="Background" Value="Transparent" />
                        </Style>
                        <Style Selector="ListBoxItem:selected">
                            <Setter Property="Background" Value="Transparent" />
                        </Style>
                        <Style Selector="ListBoxItem:pointerover">
                            <Setter Property="Background" Value="#3F3F46" />
                        </Style>
                    </ListBox.Styles>
                </ListBox>
            </Grid>
        </Border>
        
        <!-- Main Content Area -->
        <ContentControl Grid.Column="1" 
                        Content="{Binding CurrentViewModel}"
                        ContentTemplate="{StaticResource ViewModelToViewConverter}" />
    </Grid>

</Window>
